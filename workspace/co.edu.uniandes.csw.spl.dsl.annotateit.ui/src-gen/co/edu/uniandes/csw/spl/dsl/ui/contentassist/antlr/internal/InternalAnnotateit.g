/*
* generated by Xtext
*/
grammar InternalAnnotateit;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package co.edu.uniandes.csw.spl.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package co.edu.uniandes.csw.spl.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import co.edu.uniandes.csw.spl.dsl.services.AnnotateitGrammarAccess;

}

@parser::members {
 
 	private AnnotateitGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(AnnotateitGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationAttributeValue
entryRuleAnnotationAttributeValue 
:
{ before(grammarAccess.getAnnotationAttributeValueRule()); }
	 ruleAnnotationAttributeValue
{ after(grammarAccess.getAnnotationAttributeValueRule()); } 
	 EOF 
;

// Rule AnnotationAttributeValue
ruleAnnotationAttributeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAttributeValueAccess().getSimpleValueParserRuleCall()); }
	ruleSimpleValue
{ after(grammarAccess.getAnnotationAttributeValueAccess().getSimpleValueParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getGroup()); }
(rule__Type__Group__0)
{ after(grammarAccess.getTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationType
entryRuleAnnotationType 
:
{ before(grammarAccess.getAnnotationTypeRule()); }
	 ruleAnnotationType
{ after(grammarAccess.getAnnotationTypeRule()); } 
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationTypeAccess().getGroup()); }
(rule__AnnotationType__Group__0)
{ after(grammarAccess.getAnnotationTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationAttribute
entryRuleAnnotationAttribute 
:
{ before(grammarAccess.getAnnotationAttributeRule()); }
	 ruleAnnotationAttribute
{ after(grammarAccess.getAnnotationAttributeRule()); } 
	 EOF 
;

// Rule AnnotationAttribute
ruleAnnotationAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getGroup()); }
(rule__AnnotationAttribute__Group__0)
{ after(grammarAccess.getAnnotationAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotationTypeAttribute
entryRuleAnnotationTypeAttribute 
:
{ before(grammarAccess.getAnnotationTypeAttributeRule()); }
	 ruleAnnotationTypeAttribute
{ after(grammarAccess.getAnnotationTypeAttributeRule()); } 
	 EOF 
;

// Rule AnnotationTypeAttribute
ruleAnnotationTypeAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getGroup()); }
(rule__AnnotationTypeAttribute__Group__0)
{ after(grammarAccess.getAnnotationTypeAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleValue
entryRuleSimpleValue 
:
{ before(grammarAccess.getSimpleValueRule()); }
	 ruleSimpleValue
{ after(grammarAccess.getSimpleValueRule()); } 
	 EOF 
;

// Rule SimpleValue
ruleSimpleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleValueAccess().getGroup()); }
(rule__SimpleValue__Group__0)
{ after(grammarAccess.getSimpleValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageAction_0()); }
(

)
{ after(grammarAccess.getPackageAccess().getPackageAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_1()); }

	'Package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_2()); }
(rule__Package__NameAssignment_2)
{ after(grammarAccess.getPackageAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getPackageAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
	rule__Package__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_4()); }
(rule__Package__Group_4__0)?
{ after(grammarAccess.getPackageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_5()); }
(rule__Package__Group_5__0)?
{ after(grammarAccess.getPackageAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Package__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__0__Impl
	rule__Package__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypesKeyword_4_0()); }

	'types' 

{ after(grammarAccess.getPackageAccess().getTypesKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__1__Impl
	rule__Package__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_4_1()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__2__Impl
	rule__Package__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypesAssignment_4_2()); }
(rule__Package__TypesAssignment_4_2)
{ after(grammarAccess.getPackageAccess().getTypesAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__3__Impl
	rule__Package__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_4_3()); }
(rule__Package__Group_4_3__0)*
{ after(grammarAccess.getPackageAccess().getGroup_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4_4()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Package__Group_4_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4_3__0__Impl
	rule__Package__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getCommaKeyword_4_3_0()); }

	',' 

{ after(grammarAccess.getPackageAccess().getCommaKeyword_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_4_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_4_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypesAssignment_4_3_1()); }
(rule__Package__TypesAssignment_4_3_1)
{ after(grammarAccess.getPackageAccess().getTypesAssignment_4_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_5__0__Impl
	rule__Package__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAnnotationTypesAssignment_5_0()); }
(rule__Package__AnnotationTypesAssignment_5_0)
{ after(grammarAccess.getPackageAccess().getAnnotationTypesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getGroup_5_1()); }
(rule__Package__Group_5_1__0)*
{ after(grammarAccess.getPackageAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_5_1__0__Impl
	rule__Package__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getPackageAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAnnotationTypesAssignment_5_1_1()); }
(rule__Package__AnnotationTypesAssignment_5_1_1)
{ after(grammarAccess.getPackageAccess().getAnnotationTypesAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Type__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__0__Impl
	rule__Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAction_0()); }
(

)
{ after(grammarAccess.getTypeAccess().getTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__1__Impl
	rule__Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeKeyword_1()); }

	'Type' 

{ after(grammarAccess.getTypeAccess().getTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__2__Impl
	rule__Type__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment_2()); }
(rule__Type__NameAssignment_2)
{ after(grammarAccess.getTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Type__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Type__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getTypeAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AnnotationType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__0__Impl
	rule__AnnotationType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getAnnotationTypeAction_0()); }
(

)
{ after(grammarAccess.getAnnotationTypeAccess().getAnnotationTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__1__Impl
	rule__AnnotationType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getAnnotationKeyword_1()); }

	'@annotation' 

{ after(grammarAccess.getAnnotationTypeAccess().getAnnotationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__2__Impl
	rule__AnnotationType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getNameAssignment_2()); }
(rule__AnnotationType__NameAssignment_2)
{ after(grammarAccess.getAnnotationTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__3__Impl
	rule__AnnotationType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getGroup_3()); }
(rule__AnnotationType__Group_3__0)?
{ after(grammarAccess.getAnnotationTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__4__Impl
	rule__AnnotationType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getAnnotationTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__5__Impl
	rule__AnnotationType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getGroup_5()); }
(rule__AnnotationType__Group_5__0)?
{ after(grammarAccess.getAnnotationTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getAnnotationTypeAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__AnnotationType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group_3__0__Impl
	rule__AnnotationType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getContextKeyword_3_0()); }

	'context' 

{ after(grammarAccess.getAnnotationTypeAccess().getContextKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getContextAssignment_3_1()); }
(rule__AnnotationType__ContextAssignment_3_1)
{ after(grammarAccess.getAnnotationTypeAccess().getContextAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group_5__0__Impl
	rule__AnnotationType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getAttributesAssignment_5_0()); }
(rule__AnnotationType__AttributesAssignment_5_0)
{ after(grammarAccess.getAnnotationTypeAccess().getAttributesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getGroup_5_1()); }
(rule__AnnotationType__Group_5_1__0)*
{ after(grammarAccess.getAnnotationTypeAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationType__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group_5_1__0__Impl
	rule__AnnotationType__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getAnnotationTypeAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationType__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationType__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getAttributesAssignment_5_1_1()); }
(rule__AnnotationType__AttributesAssignment_5_1_1)
{ after(grammarAccess.getAnnotationTypeAccess().getAttributesAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group__0__Impl
	rule__AnnotationAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getAnnotationAttributeKeyword_0()); }

	'AnnotationAttribute' 

{ after(grammarAccess.getAnnotationAttributeAccess().getAnnotationAttributeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group__1__Impl
	rule__AnnotationAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getAnnotationAttributeAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group__2__Impl
	rule__AnnotationAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getAttributeKeyword_2()); }

	'attribute' 

{ after(grammarAccess.getAnnotationAttributeAccess().getAttributeKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group__3__Impl
	rule__AnnotationAttribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getAttributeAssignment_3()); }
(rule__AnnotationAttribute__AttributeAssignment_3)
{ after(grammarAccess.getAnnotationAttributeAccess().getAttributeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationAttribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group__4__Impl
	rule__AnnotationAttribute__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getGroup_4()); }
(rule__AnnotationAttribute__Group_4__0)?
{ after(grammarAccess.getAnnotationAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationAttribute__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getAnnotationAttributeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AnnotationAttribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group_4__0__Impl
	rule__AnnotationAttribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getValueKeyword_4_0()); }

	'value' 

{ after(grammarAccess.getAnnotationAttributeAccess().getValueKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationAttribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationAttribute__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getValueAssignment_4_1()); }
(rule__AnnotationAttribute__ValueAssignment_4_1)
{ after(grammarAccess.getAnnotationAttributeAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnnotationTypeAttribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeAttribute__Group__0__Impl
	rule__AnnotationTypeAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeAttribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getAnnotationTypeAttributeAction_0()); }
(

)
{ after(grammarAccess.getAnnotationTypeAttributeAccess().getAnnotationTypeAttributeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeAttribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeAttribute__Group__1__Impl
	rule__AnnotationTypeAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeAttribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getNameAssignment_1()); }
(rule__AnnotationTypeAttribute__NameAssignment_1)
{ after(grammarAccess.getAnnotationTypeAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeAttribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeAttribute__Group__2__Impl
	rule__AnnotationTypeAttribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeAttribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAnnotationTypeAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnnotationTypeAttribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnnotationTypeAttribute__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeAttribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getTypeAssignment_3()); }
(rule__AnnotationTypeAttribute__TypeAssignment_3)
{ after(grammarAccess.getAnnotationTypeAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SimpleValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group__0__Impl
	rule__SimpleValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getSimpleValueAction_0()); }
(

)
{ after(grammarAccess.getSimpleValueAccess().getSimpleValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group__1__Impl
	rule__SimpleValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getSimpleValueKeyword_1()); }

	'SimpleValue' 

{ after(grammarAccess.getSimpleValueAccess().getSimpleValueKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group__2__Impl
	rule__SimpleValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSimpleValueAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group__3__Impl
	rule__SimpleValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getGroup_3()); }
(rule__SimpleValue__Group_3__0)?
{ after(grammarAccess.getSimpleValueAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSimpleValueAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SimpleValue__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group_3__0__Impl
	rule__SimpleValue__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getValueKeyword_3_0()); }

	'value' 

{ after(grammarAccess.getSimpleValueAccess().getValueKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleValue__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleValue__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getValueAssignment_3_1()); }
(rule__SimpleValue__ValueAssignment_3_1)
{ after(grammarAccess.getSimpleValueAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Package__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getPackageAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__TypesAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypesTypeParserRuleCall_4_2_0()); }
	ruleType{ after(grammarAccess.getPackageAccess().getTypesTypeParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__TypesAssignment_4_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getTypesTypeParserRuleCall_4_3_1_0()); }
	ruleType{ after(grammarAccess.getPackageAccess().getTypesTypeParserRuleCall_4_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__AnnotationTypesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAnnotationTypesAnnotationTypeParserRuleCall_5_0_0()); }
	ruleAnnotationType{ after(grammarAccess.getPackageAccess().getAnnotationTypesAnnotationTypeParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__AnnotationTypesAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getAnnotationTypesAnnotationTypeParserRuleCall_5_1_1_0()); }
	ruleAnnotationType{ after(grammarAccess.getPackageAccess().getAnnotationTypesAnnotationTypeParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Type__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getTypeAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getNameEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getAnnotationTypeAccess().getNameEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__ContextAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getContextEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getAnnotationTypeAccess().getContextEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__AttributesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_0_0()); }
	ruleAnnotationTypeAttribute{ after(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationType__AttributesAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_1_1_0()); }
	ruleAnnotationTypeAttribute{ after(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__AttributeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getAttributeAnnotationTypeAttributeCrossReference_3_0()); }
(
{ before(grammarAccess.getAnnotationAttributeAccess().getAttributeAnnotationTypeAttributeEStringParserRuleCall_3_0_1()); }
	ruleEString{ after(grammarAccess.getAnnotationAttributeAccess().getAttributeAnnotationTypeAttributeEStringParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAnnotationAttributeAccess().getAttributeAnnotationTypeAttributeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationAttribute__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAttributeAccess().getValueAnnotationAttributeValueParserRuleCall_4_1_0()); }
	ruleAnnotationAttributeValue{ after(grammarAccess.getAnnotationAttributeAccess().getValueAnnotationAttributeValueParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeAttribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAnnotationTypeAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnnotationTypeAttribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getTypeTypeCrossReference_3_0()); }
(
{ before(grammarAccess.getAnnotationTypeAttributeAccess().getTypeTypeIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getAnnotationTypeAttributeAccess().getTypeTypeIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getAnnotationTypeAttributeAccess().getTypeTypeCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValue__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueAccess().getValueEStringParserRuleCall_3_1_0()); }
	ruleEString{ after(grammarAccess.getSimpleValueAccess().getValueEStringParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


