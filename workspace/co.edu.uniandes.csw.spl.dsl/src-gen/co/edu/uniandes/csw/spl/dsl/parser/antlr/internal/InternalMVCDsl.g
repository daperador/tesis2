/*
* generated by Xtext
*/
grammar InternalMVCDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package co.edu.uniandes.csw.spl.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.edu.uniandes.csw.spl.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.uniandes.csw.spl.dsl.services.MVCDslGrammarAccess;

}

@parser::members {

 	private MVCDslGrammarAccess grammarAccess;
 	
    public InternalMVCDslParser(TokenStream input, MVCDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "MVCModel";	
   	}
   	
   	@Override
   	protected MVCDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleMVCModel
entryRuleMVCModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMVCModelRule()); }
	 iv_ruleMVCModel=ruleMVCModel 
	 { $current=$iv_ruleMVCModel.current; } 
	 EOF 
;

// Rule MVCModel
ruleMVCModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='import' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getMVCModelAccess().getImportKeyword_0());
    }
(
(
		lv_importURI_1_0=RULE_STRING
		{
			newLeafNode(lv_importURI_1_0, grammarAccess.getMVCModelAccess().getImportURISTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVCModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"importURI",
        		lv_importURI_1_0, 
        		"STRING");
	    }

)
)	otherlv_2=';' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMVCModelAccess().getSemicolonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMVCModelAccess().getAnnotationsAnnotationParserRuleCall_3_0()); 
	    }
		lv_annotations_3_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMVCModelRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_3_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='MVCModel' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMVCModelAccess().getMVCModelKeyword_4());
    }
(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getMVCModelAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVCModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
)(	otherlv_6='version' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMVCModelAccess().getVersionKeyword_6_0());
    }
(
(
		lv_version_7_0=RULE_STRING
		{
			newLeafNode(lv_version_7_0, grammarAccess.getMVCModelAccess().getVersionSTRINGTerminalRuleCall_6_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVCModelRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"version",
        		lv_version_7_0, 
        		"STRING");
	    }

)
))?	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMVCModelAccess().getLeftCurlyBracketKeyword_7());
    }
	otherlv_9='components' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMVCModelAccess().getComponentsKeyword_8());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMVCModelAccess().getLeftCurlyBracketKeyword_9());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVCModelRule());
	        }
        }
	otherlv_11=RULE_ID
	{
		newLeafNode(otherlv_11, grammarAccess.getMVCModelAccess().getComponentsComponentCrossReference_10_0()); 
	}

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMVCModelAccess().getCommaKeyword_11_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getMVCModelRule());
	        }
        }
	otherlv_13=RULE_ID
	{
		newLeafNode(otherlv_13, grammarAccess.getMVCModelAccess().getComponentsComponentCrossReference_11_1_0()); 
	}

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getMVCModelAccess().getRightCurlyBracketKeyword_12());
    }
	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getMVCModelAccess().getRightCurlyBracketKeyword_13());
    }
)
;





// Entry rule entryRuleAnnotationAttributeValue
entryRuleAnnotationAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationAttributeValueRule()); }
	 iv_ruleAnnotationAttributeValue=ruleAnnotationAttributeValue 
	 { $current=$iv_ruleAnnotationAttributeValue.current; } 
	 EOF 
;

// Rule AnnotationAttributeValue
ruleAnnotationAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getAnnotationAttributeValueAccess().getSimpleValueParserRuleCall()); 
    }
    this_SimpleValue_0=ruleSimpleValue
    { 
        $current = $this_SimpleValue_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getAnnotationTypeAnnotationTypeCrossReference_1_0()); 
	}

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAttributesAnnotationAttributeParserRuleCall_3_0_0()); 
	    }
		lv_attributes_3_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_3_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAttributesAnnotationAttributeParserRuleCall_3_1_1_0()); 
	    }
		lv_attributes_5_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_5_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleAnnotationAttribute
entryRuleAnnotationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationAttributeRule()); }
	 iv_ruleAnnotationAttribute=ruleAnnotationAttribute 
	 { $current=$iv_ruleAnnotationAttribute.current; } 
	 EOF 
;

// Rule AnnotationAttribute
ruleAnnotationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationAttributeRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getAnnotationAttributeAccess().getAttributeAnnotationTypeAttributeCrossReference_0_0()); 
	}

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationAttributeAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getValueAnnotationAttributeValueParserRuleCall_2_0()); 
	    }
		lv_value_2_0=ruleAnnotationAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"AnnotationAttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
;





// Entry rule entryRuleSimpleValue
entryRuleSimpleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleValueRule()); }
	 iv_ruleSimpleValue=ruleSimpleValue 
	 { $current=$iv_ruleSimpleValue.current; } 
	 EOF 
;

// Rule SimpleValue
ruleSimpleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleValueAccess().getSimpleValueAction_0(),
            $current);
    }
)(
(
		lv_value_1_0=RULE_STRING
		{
			newLeafNode(lv_value_1_0, grammarAccess.getSimpleValueAccess().getValueSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleValueRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"STRING");
	    }

)
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


