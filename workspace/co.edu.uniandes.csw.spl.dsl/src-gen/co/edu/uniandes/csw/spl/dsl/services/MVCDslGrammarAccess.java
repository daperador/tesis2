/*
* generated by Xtext
*/
package co.edu.uniandes.csw.spl.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class MVCDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class MVCModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MVCModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAnnotationsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_3_0 = (RuleCall)cAnnotationsAssignment_3.eContents().get(0);
		private final Keyword cMVCModelKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNameIDTerminalRuleCall_5_0 = (RuleCall)cNameAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cVersionKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cVersionAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cVersionSTRINGTerminalRuleCall_6_1_0 = (RuleCall)cVersionAssignment_6_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cComponentsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cComponentsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cComponentsComponentCrossReference_10_0 = (CrossReference)cComponentsAssignment_10.eContents().get(0);
		private final RuleCall cComponentsComponentIDTerminalRuleCall_10_0_1 = (RuleCall)cComponentsComponentCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cComponentsAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cComponentsComponentCrossReference_11_1_0 = (CrossReference)cComponentsAssignment_11_1.eContents().get(0);
		private final RuleCall cComponentsComponentIDTerminalRuleCall_11_1_0_1 = (RuleCall)cComponentsComponentCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//MVCModel:
		//	"import" importURI=STRING ";" annotations+=Annotation* "MVCModel" name=ID ("version" version=STRING)? "{"
		//	"components" "{" components+=[Component] ("," components+=[Component])* "}" "}";
		public ParserRule getRule() { return rule; }

		//"import" importURI=STRING ";" annotations+=Annotation* "MVCModel" name=ID ("version" version=STRING)? "{" "components"
		//"{" components+=[Component] ("," components+=[Component])* "}" "}"
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//annotations+=Annotation*
		public Assignment getAnnotationsAssignment_3() { return cAnnotationsAssignment_3; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_3_0() { return cAnnotationsAnnotationParserRuleCall_3_0; }

		//"MVCModel"
		public Keyword getMVCModelKeyword_4() { return cMVCModelKeyword_4; }

		//name=ID
		public Assignment getNameAssignment_5() { return cNameAssignment_5; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_5_0() { return cNameIDTerminalRuleCall_5_0; }

		//("version" version=STRING)?
		public Group getGroup_6() { return cGroup_6; }

		//"version"
		public Keyword getVersionKeyword_6_0() { return cVersionKeyword_6_0; }

		//version=STRING
		public Assignment getVersionAssignment_6_1() { return cVersionAssignment_6_1; }

		//STRING
		public RuleCall getVersionSTRINGTerminalRuleCall_6_1_0() { return cVersionSTRINGTerminalRuleCall_6_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7() { return cLeftCurlyBracketKeyword_7; }

		//"components"
		public Keyword getComponentsKeyword_8() { return cComponentsKeyword_8; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_9() { return cLeftCurlyBracketKeyword_9; }

		//components+=[Component]
		public Assignment getComponentsAssignment_10() { return cComponentsAssignment_10; }

		//[Component]
		public CrossReference getComponentsComponentCrossReference_10_0() { return cComponentsComponentCrossReference_10_0; }

		//ID
		public RuleCall getComponentsComponentIDTerminalRuleCall_10_0_1() { return cComponentsComponentIDTerminalRuleCall_10_0_1; }

		//("," components+=[Component])*
		public Group getGroup_11() { return cGroup_11; }

		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }

		//components+=[Component]
		public Assignment getComponentsAssignment_11_1() { return cComponentsAssignment_11_1; }

		//[Component]
		public CrossReference getComponentsComponentCrossReference_11_1_0() { return cComponentsComponentCrossReference_11_1_0; }

		//ID
		public RuleCall getComponentsComponentIDTerminalRuleCall_11_1_0_1() { return cComponentsComponentIDTerminalRuleCall_11_1_0_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}

	public class AnnotationAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttributeValue");
		private final RuleCall cSimpleValueParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnotationAttributeValue returns annotate::AnnotationAttributeValue:
		//	SimpleValue;
		public ParserRule getRule() { return rule; }

		//SimpleValue
		public RuleCall getSimpleValueParserRuleCall() { return cSimpleValueParserRuleCall; }
	}

	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAnnotationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAnnotationTypeAnnotationTypeCrossReference_1_0 = (CrossReference)cAnnotationTypeAssignment_1.eContents().get(0);
		private final RuleCall cAnnotationTypeAnnotationTypeIDTerminalRuleCall_1_0_1 = (RuleCall)cAnnotationTypeAnnotationTypeCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cAttributesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_3_0_0 = (RuleCall)cAttributesAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_3_1_1_0 = (RuleCall)cAttributesAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Annotation returns annotate::Annotation:
		//	"@" annotationType=[annotate::AnnotationType] "(" (attributes+=AnnotationAttribute (","
		//	attributes+=AnnotationAttribute)*)? ")";
		public ParserRule getRule() { return rule; }

		//"@" annotationType=[annotate::AnnotationType] "(" (attributes+=AnnotationAttribute (","
		//attributes+=AnnotationAttribute)*)? ")"
		public Group getGroup() { return cGroup; }

		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//annotationType=[annotate::AnnotationType]
		public Assignment getAnnotationTypeAssignment_1() { return cAnnotationTypeAssignment_1; }

		//[annotate::AnnotationType]
		public CrossReference getAnnotationTypeAnnotationTypeCrossReference_1_0() { return cAnnotationTypeAnnotationTypeCrossReference_1_0; }

		//ID
		public RuleCall getAnnotationTypeAnnotationTypeIDTerminalRuleCall_1_0_1() { return cAnnotationTypeAnnotationTypeIDTerminalRuleCall_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)*)?
		public Group getGroup_3() { return cGroup_3; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_3_0() { return cAttributesAssignment_3_0; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_3_0_0() { return cAttributesAnnotationAttributeParserRuleCall_3_0_0; }

		//("," attributes+=AnnotationAttribute)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_3_1_1() { return cAttributesAssignment_3_1_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_3_1_1_0() { return cAttributesAnnotationAttributeParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class AnnotationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAnnotationTypeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAnnotationTypeAttributeIDTerminalRuleCall_0_0_1 = (RuleCall)cAttributeAnnotationTypeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAnnotationAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AnnotationAttribute returns annotate::AnnotationAttribute:
		//	attribute=[annotate::AnnotationTypeAttribute] "=" value=AnnotationAttributeValue?;
		public ParserRule getRule() { return rule; }

		//attribute=[annotate::AnnotationTypeAttribute] "=" value=AnnotationAttributeValue?
		public Group getGroup() { return cGroup; }

		//attribute=[annotate::AnnotationTypeAttribute]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }

		//[annotate::AnnotationTypeAttribute]
		public CrossReference getAttributeAnnotationTypeAttributeCrossReference_0_0() { return cAttributeAnnotationTypeAttributeCrossReference_0_0; }

		//ID
		public RuleCall getAttributeAnnotationTypeAttributeIDTerminalRuleCall_0_0_1() { return cAttributeAnnotationTypeAttributeIDTerminalRuleCall_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=AnnotationAttributeValue?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//AnnotationAttributeValue
		public RuleCall getValueAnnotationAttributeValueParserRuleCall_2_0() { return cValueAnnotationAttributeValueParserRuleCall_2_0; }
	}

	public class SimpleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//SimpleValue returns annotate::SimpleValue:
		//	{annotate::SimpleValue} value=STRING;
		public ParserRule getRule() { return rule; }

		//{annotate::SimpleValue} value=STRING
		public Group getGroup() { return cGroup; }

		//{annotate::SimpleValue}
		public Action getSimpleValueAction_0() { return cSimpleValueAction_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}
	
	
	private final MVCModelElements pMVCModel;
	private final AnnotationAttributeValueElements pAnnotationAttributeValue;
	private final AnnotationElements pAnnotation;
	private final AnnotationAttributeElements pAnnotationAttribute;
	private final SimpleValueElements pSimpleValue;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MVCDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMVCModel = new MVCModelElements();
		this.pAnnotationAttributeValue = new AnnotationAttributeValueElements();
		this.pAnnotation = new AnnotationElements();
		this.pAnnotationAttribute = new AnnotationAttributeElements();
		this.pSimpleValue = new SimpleValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.csw.spl.dsl.MVCDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MVCModel:
	//	"import" importURI=STRING ";" annotations+=Annotation* "MVCModel" name=ID ("version" version=STRING)? "{"
	//	"components" "{" components+=[Component] ("," components+=[Component])* "}" "}";
	public MVCModelElements getMVCModelAccess() {
		return pMVCModel;
	}
	
	public ParserRule getMVCModelRule() {
		return getMVCModelAccess().getRule();
	}

	//AnnotationAttributeValue returns annotate::AnnotationAttributeValue:
	//	SimpleValue;
	public AnnotationAttributeValueElements getAnnotationAttributeValueAccess() {
		return pAnnotationAttributeValue;
	}
	
	public ParserRule getAnnotationAttributeValueRule() {
		return getAnnotationAttributeValueAccess().getRule();
	}

	//Annotation returns annotate::Annotation:
	//	"@" annotationType=[annotate::AnnotationType] "(" (attributes+=AnnotationAttribute (","
	//	attributes+=AnnotationAttribute)*)? ")";
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//AnnotationAttribute returns annotate::AnnotationAttribute:
	//	attribute=[annotate::AnnotationTypeAttribute] "=" value=AnnotationAttributeValue?;
	public AnnotationAttributeElements getAnnotationAttributeAccess() {
		return pAnnotationAttribute;
	}
	
	public ParserRule getAnnotationAttributeRule() {
		return getAnnotationAttributeAccess().getRule();
	}

	//SimpleValue returns annotate::SimpleValue:
	//	{annotate::SimpleValue} value=STRING;
	public SimpleValueElements getSimpleValueAccess() {
		return pSimpleValue;
	}
	
	public ParserRule getSimpleValueRule() {
		return getSimpleValueAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
