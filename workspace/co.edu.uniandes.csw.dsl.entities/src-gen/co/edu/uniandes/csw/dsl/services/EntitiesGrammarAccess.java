/*
* generated by Xtext
*/
package co.edu.uniandes.csw.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class EntitiesGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class EntitiesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entities");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntitiesAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportsParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cEntitiesAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cEntitiesEntityParserRuleCall_2_0 = (RuleCall)cEntitiesAssignment_2.eContents().get(0);
		
		//Entities returns mvc::Entities:
		//	{mvc::Entities} imports+=imports* entities+=Entity*;
		public ParserRule getRule() { return rule; }

		//{mvc::Entities} imports+=imports* entities+=Entity*
		public Group getGroup() { return cGroup; }

		//{mvc::Entities}
		public Action getEntitiesAction_0() { return cEntitiesAction_0; }

		//imports+=imports*
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//imports
		public RuleCall getImportsImportsParserRuleCall_1_0() { return cImportsImportsParserRuleCall_1_0; }

		//entities+=Entity*
		public Assignment getEntitiesAssignment_2() { return cEntitiesAssignment_2; }

		//Entity
		public RuleCall getEntitiesEntityParserRuleCall_2_0() { return cEntitiesEntityParserRuleCall_2_0; }
	}

	public class ImportsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "imports");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImportURIAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportURISTRINGTerminalRuleCall_1_0 = (RuleCall)cImportURIAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//imports returns mvc::Import:
		//	"import" importURI=STRING ";";
		public ParserRule getRule() { return rule; }

		//"import" importURI=STRING ";"
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//importURI=STRING
		public Assignment getImportURIAssignment_1() { return cImportURIAssignment_1; }

		//STRING
		public RuleCall getImportURISTRINGTerminalRuleCall_1_0() { return cImportURISTRINGTerminalRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class AnnotationAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttributeValue");
		private final RuleCall cSimpleValueParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnotationAttributeValue:
		//	SimpleValue;
		public ParserRule getRule() { return rule; }

		//SimpleValue
		public RuleCall getSimpleValueParserRuleCall() { return cSimpleValueParserRuleCall; }
	}

	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCommercialAtKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAnnotationTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAnnotationTypeAnnotationTypeCrossReference_1_0 = (CrossReference)cAnnotationTypeAssignment_1.eContents().get(0);
		private final RuleCall cAnnotationTypeAnnotationTypeIDTerminalRuleCall_1_0_1 = (RuleCall)cAnnotationTypeAnnotationTypeCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Assignment cAttributesAssignment_3_0 = (Assignment)cGroup_3.eContents().get(0);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_3_0_0 = (RuleCall)cAttributesAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Keyword cCommaKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cAttributesAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_3_1_1_0 = (RuleCall)cAttributesAssignment_3_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Annotation:
		//	"@" annotationType=[AnnotationType] "(" (attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)*)?
		//	")";
		public ParserRule getRule() { return rule; }

		//"@" annotationType=[AnnotationType] "(" (attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)*)? ")"
		public Group getGroup() { return cGroup; }

		//"@"
		public Keyword getCommercialAtKeyword_0() { return cCommercialAtKeyword_0; }

		//annotationType=[AnnotationType]
		public Assignment getAnnotationTypeAssignment_1() { return cAnnotationTypeAssignment_1; }

		//[AnnotationType]
		public CrossReference getAnnotationTypeAnnotationTypeCrossReference_1_0() { return cAnnotationTypeAnnotationTypeCrossReference_1_0; }

		//ID
		public RuleCall getAnnotationTypeAnnotationTypeIDTerminalRuleCall_1_0_1() { return cAnnotationTypeAnnotationTypeIDTerminalRuleCall_1_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//(attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)*)?
		public Group getGroup_3() { return cGroup_3; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_3_0() { return cAttributesAssignment_3_0; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_3_0_0() { return cAttributesAnnotationAttributeParserRuleCall_3_0_0; }

		//("," attributes+=AnnotationAttribute)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//","
		public Keyword getCommaKeyword_3_1_0() { return cCommaKeyword_3_1_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_3_1_1() { return cAttributesAssignment_3_1_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_3_1_1_0() { return cAttributesAnnotationAttributeParserRuleCall_3_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }
	}

	public class EntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cEntityAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Keyword cEntityKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cExtendsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cExtendsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cExtendsEntityCrossReference_4_2_0 = (CrossReference)cExtendsAssignment_4_2.eContents().get(0);
		private final RuleCall cExtendsEntityIDTerminalRuleCall_4_2_0_1 = (RuleCall)cExtendsEntityCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cExtendsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cExtendsEntityCrossReference_4_3_1_0 = (CrossReference)cExtendsAssignment_4_3_1.eContents().get(0);
		private final RuleCall cExtendsEntityIDTerminalRuleCall_4_3_1_0_1 = (RuleCall)cExtendsEntityCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cLeftCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Assignment cAttributesAssignment_6_0 = (Assignment)cGroup_6.eContents().get(0);
		private final RuleCall cAttributesAttributeParserRuleCall_6_0_0 = (RuleCall)cAttributesAssignment_6_0.eContents().get(0);
		private final Group cGroup_6_1 = (Group)cGroup_6.eContents().get(1);
		private final Keyword cCommaKeyword_6_1_0 = (Keyword)cGroup_6_1.eContents().get(0);
		private final Assignment cAttributesAssignment_6_1_1 = (Assignment)cGroup_6_1.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_6_1_1_0 = (RuleCall)cAttributesAssignment_6_1_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAssociationsKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cAssociationsAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAssociationsAssociationParserRuleCall_7_2_0 = (RuleCall)cAssociationsAssignment_7_2.eContents().get(0);
		private final Group cGroup_7_3 = (Group)cGroup_7.eContents().get(3);
		private final Keyword cCommaKeyword_7_3_0 = (Keyword)cGroup_7_3.eContents().get(0);
		private final Assignment cAssociationsAssignment_7_3_1 = (Assignment)cGroup_7_3.eContents().get(1);
		private final RuleCall cAssociationsAssociationParserRuleCall_7_3_1_0 = (RuleCall)cAssociationsAssignment_7_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7_4 = (Keyword)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Entity returns mvc::Entity:
		//	{mvc::Entity} annotations+=Annotation? "Entity" name=ID ("extends" "(" extends+=[mvc::Entity] (","
		//	extends+=[mvc::Entity])* ")")? "{" (attributes+=Attribute ("," attributes+=Attribute)*)? ("associations" "{"
		//	associations+=Association ("," associations+=Association)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//{mvc::Entity} annotations+=Annotation? "Entity" name=ID ("extends" "(" extends+=[mvc::Entity] (","
		//extends+=[mvc::Entity])* ")")? "{" (attributes+=Attribute ("," attributes+=Attribute)*)? ("associations" "{"
		//associations+=Association ("," associations+=Association)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//{mvc::Entity}
		public Action getEntityAction_0() { return cEntityAction_0; }

		//annotations+=Annotation?
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0() { return cAnnotationsAnnotationParserRuleCall_1_0; }

		//"Entity"
		public Keyword getEntityKeyword_2() { return cEntityKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//("extends" "(" extends+=[mvc::Entity] ("," extends+=[mvc::Entity])* ")")?
		public Group getGroup_4() { return cGroup_4; }

		//"extends"
		public Keyword getExtendsKeyword_4_0() { return cExtendsKeyword_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }

		//extends+=[mvc::Entity]
		public Assignment getExtendsAssignment_4_2() { return cExtendsAssignment_4_2; }

		//[mvc::Entity]
		public CrossReference getExtendsEntityCrossReference_4_2_0() { return cExtendsEntityCrossReference_4_2_0; }

		//ID
		public RuleCall getExtendsEntityIDTerminalRuleCall_4_2_0_1() { return cExtendsEntityIDTerminalRuleCall_4_2_0_1; }

		//("," extends+=[mvc::Entity])*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//extends+=[mvc::Entity]
		public Assignment getExtendsAssignment_4_3_1() { return cExtendsAssignment_4_3_1; }

		//[mvc::Entity]
		public CrossReference getExtendsEntityCrossReference_4_3_1_0() { return cExtendsEntityCrossReference_4_3_1_0; }

		//ID
		public RuleCall getExtendsEntityIDTerminalRuleCall_4_3_1_0_1() { return cExtendsEntityIDTerminalRuleCall_4_3_1_0_1; }

		//")"
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_5() { return cLeftCurlyBracketKeyword_5; }

		//(attributes+=Attribute ("," attributes+=Attribute)*)?
		public Group getGroup_6() { return cGroup_6; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_6_0() { return cAttributesAssignment_6_0; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_6_0_0() { return cAttributesAttributeParserRuleCall_6_0_0; }

		//("," attributes+=Attribute)*
		public Group getGroup_6_1() { return cGroup_6_1; }

		//","
		public Keyword getCommaKeyword_6_1_0() { return cCommaKeyword_6_1_0; }

		//attributes+=Attribute
		public Assignment getAttributesAssignment_6_1_1() { return cAttributesAssignment_6_1_1; }

		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_6_1_1_0() { return cAttributesAttributeParserRuleCall_6_1_1_0; }

		//("associations" "{" associations+=Association ("," associations+=Association)* "}")?
		public Group getGroup_7() { return cGroup_7; }

		//"associations"
		public Keyword getAssociationsKeyword_7_0() { return cAssociationsKeyword_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_7_1() { return cLeftCurlyBracketKeyword_7_1; }

		//associations+=Association
		public Assignment getAssociationsAssignment_7_2() { return cAssociationsAssignment_7_2; }

		//Association
		public RuleCall getAssociationsAssociationParserRuleCall_7_2_0() { return cAssociationsAssociationParserRuleCall_7_2_0; }

		//("," associations+=Association)*
		public Group getGroup_7_3() { return cGroup_7_3; }

		//","
		public Keyword getCommaKeyword_7_3_0() { return cCommaKeyword_7_3_0; }

		//associations+=Association
		public Assignment getAssociationsAssignment_7_3_1() { return cAssociationsAssignment_7_3_1; }

		//Association
		public RuleCall getAssociationsAssociationParserRuleCall_7_3_1_0() { return cAssociationsAssociationParserRuleCall_7_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7_4() { return cRightCurlyBracketKeyword_7_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}

	public class AnnotationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAttributeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cAttributeAnnotationTypeAttributeCrossReference_0_0 = (CrossReference)cAttributeAssignment_0.eContents().get(0);
		private final RuleCall cAttributeAnnotationTypeAttributeIDTerminalRuleCall_0_0_1 = (RuleCall)cAttributeAnnotationTypeAttributeCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueAnnotationAttributeValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AnnotationAttribute:
		//	attribute=[AnnotationTypeAttribute] "=" value=AnnotationAttributeValue?;
		public ParserRule getRule() { return rule; }

		//attribute=[AnnotationTypeAttribute] "=" value=AnnotationAttributeValue?
		public Group getGroup() { return cGroup; }

		//attribute=[AnnotationTypeAttribute]
		public Assignment getAttributeAssignment_0() { return cAttributeAssignment_0; }

		//[AnnotationTypeAttribute]
		public CrossReference getAttributeAnnotationTypeAttributeCrossReference_0_0() { return cAttributeAnnotationTypeAttributeCrossReference_0_0; }

		//ID
		public RuleCall getAttributeAnnotationTypeAttributeIDTerminalRuleCall_0_0_1() { return cAttributeAnnotationTypeAttributeIDTerminalRuleCall_0_0_1; }

		//"="
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }

		//value=AnnotationAttributeValue?
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//AnnotationAttributeValue
		public RuleCall getValueAnnotationAttributeValueParserRuleCall_2_0() { return cValueAnnotationAttributeValueParserRuleCall_2_0; }
	}

	public class SimpleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		
		//SimpleValue:
		//	{SimpleValue} value=STRING;
		public ParserRule getRule() { return rule; }

		//{SimpleValue} value=STRING
		public Group getGroup() { return cGroup; }

		//{SimpleValue}
		public Action getSimpleValueAction_0() { return cSimpleValueAction_0; }

		//value=STRING
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_1_0() { return cValueSTRINGTerminalRuleCall_1_0; }
	}

	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypeIDTerminalRuleCall_4_0 = (RuleCall)cTypeAssignment_4.eContents().get(0);
		
		//Attribute returns mvc::Attribute:
		//	{mvc::Attribute} annotations+=Annotation? name=ID ":" type=ID;
		public ParserRule getRule() { return rule; }

		//{mvc::Attribute} annotations+=Annotation? name=ID ":" type=ID
		public Group getGroup() { return cGroup; }

		//{mvc::Attribute}
		public Action getAttributeAction_0() { return cAttributeAction_0; }

		//annotations+=Annotation?
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0() { return cAnnotationsAnnotationParserRuleCall_1_0; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }

		//type=ID
		public Assignment getTypeAssignment_4() { return cTypeAssignment_4; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_4_0() { return cTypeIDTerminalRuleCall_4_0; }
	}

	public class AssociationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Association");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cContainmentAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cContainmentContainmentKeyword_0_0 = (Keyword)cContainmentAssignment_0.eContents().get(0);
		private final Assignment cAnnotationsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationsAnnotationParserRuleCall_1_0 = (RuleCall)cAnnotationsAssignment_1.eContents().get(0);
		private final Keyword cManyKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cTargetAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cTargetEntityCrossReference_5_0 = (CrossReference)cTargetAssignment_5.eContents().get(0);
		private final RuleCall cTargetEntityIDTerminalRuleCall_5_0_1 = (RuleCall)cTargetEntityCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Keyword cLowerBoundKeyword_6_0_0 = (Keyword)cGroup_6_0.eContents().get(0);
		private final Assignment cLowerBoundAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final RuleCall cLowerBoundEIntParserRuleCall_6_0_1_0 = (RuleCall)cLowerBoundAssignment_6_0_1.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cUpperBoundKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cUpperBoundAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final RuleCall cUpperBoundEIntParserRuleCall_6_2_1_0 = (RuleCall)cUpperBoundAssignment_6_2_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Association returns mvc::Association:
		//	containment?="containment"? annotations+=Annotation? "many" name=ID ":" target=[mvc::Entity] (("lowerBound"
		//	lowerBound=EInt) ":" ("upperBound" upperBound=EInt))? ";";
		public ParserRule getRule() { return rule; }

		//containment?="containment"? annotations+=Annotation? "many" name=ID ":" target=[mvc::Entity] (("lowerBound"
		//lowerBound=EInt) ":" ("upperBound" upperBound=EInt))? ";"
		public Group getGroup() { return cGroup; }

		//containment?="containment"?
		public Assignment getContainmentAssignment_0() { return cContainmentAssignment_0; }

		//"containment"
		public Keyword getContainmentContainmentKeyword_0_0() { return cContainmentContainmentKeyword_0_0; }

		//annotations+=Annotation?
		public Assignment getAnnotationsAssignment_1() { return cAnnotationsAssignment_1; }

		//Annotation
		public RuleCall getAnnotationsAnnotationParserRuleCall_1_0() { return cAnnotationsAnnotationParserRuleCall_1_0; }

		//"many"
		public Keyword getManyKeyword_2() { return cManyKeyword_2; }

		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//target=[mvc::Entity]
		public Assignment getTargetAssignment_5() { return cTargetAssignment_5; }

		//[mvc::Entity]
		public CrossReference getTargetEntityCrossReference_5_0() { return cTargetEntityCrossReference_5_0; }

		//ID
		public RuleCall getTargetEntityIDTerminalRuleCall_5_0_1() { return cTargetEntityIDTerminalRuleCall_5_0_1; }

		//(("lowerBound" lowerBound=EInt) ":" ("upperBound" upperBound=EInt))?
		public Group getGroup_6() { return cGroup_6; }

		//"lowerBound" lowerBound=EInt
		public Group getGroup_6_0() { return cGroup_6_0; }

		//"lowerBound"
		public Keyword getLowerBoundKeyword_6_0_0() { return cLowerBoundKeyword_6_0_0; }

		//lowerBound=EInt
		public Assignment getLowerBoundAssignment_6_0_1() { return cLowerBoundAssignment_6_0_1; }

		//EInt
		public RuleCall getLowerBoundEIntParserRuleCall_6_0_1_0() { return cLowerBoundEIntParserRuleCall_6_0_1_0; }

		//":"
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }

		//"upperBound" upperBound=EInt
		public Group getGroup_6_2() { return cGroup_6_2; }

		//"upperBound"
		public Keyword getUpperBoundKeyword_6_2_0() { return cUpperBoundKeyword_6_2_0; }

		//upperBound=EInt
		public Assignment getUpperBoundAssignment_6_2_1() { return cUpperBoundAssignment_6_2_1; }

		//EInt
		public RuleCall getUpperBoundEIntParserRuleCall_6_2_1_0() { return cUpperBoundEIntParserRuleCall_6_2_1_0; }

		//";"
		public Keyword getSemicolonKeyword_7() { return cSemicolonKeyword_7; }
	}

	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt returns ecore::EInt:
		//	"-"? INT;
		public ParserRule getRule() { return rule; }

		//"-"? INT
		public Group getGroup() { return cGroup; }

		//"-"?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	private final EntitiesElements pEntities;
	private final ImportsElements pImports;
	private final AnnotationAttributeValueElements pAnnotationAttributeValue;
	private final AnnotationElements pAnnotation;
	private final EntityElements pEntity;
	private final AnnotationAttributeElements pAnnotationAttribute;
	private final SimpleValueElements pSimpleValue;
	private final AttributeElements pAttribute;
	private final AssociationElements pAssociation;
	private final EIntElements pEInt;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EntitiesGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pEntities = new EntitiesElements();
		this.pImports = new ImportsElements();
		this.pAnnotationAttributeValue = new AnnotationAttributeValueElements();
		this.pAnnotation = new AnnotationElements();
		this.pEntity = new EntityElements();
		this.pAnnotationAttribute = new AnnotationAttributeElements();
		this.pSimpleValue = new SimpleValueElements();
		this.pAttribute = new AttributeElements();
		this.pAssociation = new AssociationElements();
		this.pEInt = new EIntElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.csw.dsl.Entities".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Entities returns mvc::Entities:
	//	{mvc::Entities} imports+=imports* entities+=Entity*;
	public EntitiesElements getEntitiesAccess() {
		return pEntities;
	}
	
	public ParserRule getEntitiesRule() {
		return getEntitiesAccess().getRule();
	}

	//imports returns mvc::Import:
	//	"import" importURI=STRING ";";
	public ImportsElements getImportsAccess() {
		return pImports;
	}
	
	public ParserRule getImportsRule() {
		return getImportsAccess().getRule();
	}

	//AnnotationAttributeValue:
	//	SimpleValue;
	public AnnotationAttributeValueElements getAnnotationAttributeValueAccess() {
		return pAnnotationAttributeValue;
	}
	
	public ParserRule getAnnotationAttributeValueRule() {
		return getAnnotationAttributeValueAccess().getRule();
	}

	//Annotation:
	//	"@" annotationType=[AnnotationType] "(" (attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)*)?
	//	")";
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//Entity returns mvc::Entity:
	//	{mvc::Entity} annotations+=Annotation? "Entity" name=ID ("extends" "(" extends+=[mvc::Entity] (","
	//	extends+=[mvc::Entity])* ")")? "{" (attributes+=Attribute ("," attributes+=Attribute)*)? ("associations" "{"
	//	associations+=Association ("," associations+=Association)* "}")? "}";
	public EntityElements getEntityAccess() {
		return pEntity;
	}
	
	public ParserRule getEntityRule() {
		return getEntityAccess().getRule();
	}

	//AnnotationAttribute:
	//	attribute=[AnnotationTypeAttribute] "=" value=AnnotationAttributeValue?;
	public AnnotationAttributeElements getAnnotationAttributeAccess() {
		return pAnnotationAttribute;
	}
	
	public ParserRule getAnnotationAttributeRule() {
		return getAnnotationAttributeAccess().getRule();
	}

	//SimpleValue:
	//	{SimpleValue} value=STRING;
	public SimpleValueElements getSimpleValueAccess() {
		return pSimpleValue;
	}
	
	public ParserRule getSimpleValueRule() {
		return getSimpleValueAccess().getRule();
	}

	//Attribute returns mvc::Attribute:
	//	{mvc::Attribute} annotations+=Annotation? name=ID ":" type=ID;
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}

	//Association returns mvc::Association:
	//	containment?="containment"? annotations+=Annotation? "many" name=ID ":" target=[mvc::Entity] (("lowerBound"
	//	lowerBound=EInt) ":" ("upperBound" upperBound=EInt))? ";";
	public AssociationElements getAssociationAccess() {
		return pAssociation;
	}
	
	public ParserRule getAssociationRule() {
		return getAssociationAccess().getRule();
	}

	//EInt returns ecore::EInt:
	//	"-"? INT;
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
