/*
* generated by Xtext
*/
package co.edu.uniandes.csw.spl.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AnnotateitGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cTypesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cTypesTypeParserRuleCall_4_2_0 = (RuleCall)cTypesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cTypesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cTypesTypeParserRuleCall_4_3_1_0 = (RuleCall)cTypesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cAnnotationTypesAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAnnotationTypesAnnotationTypeParserRuleCall_5_0_0 = (RuleCall)cAnnotationTypesAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cAnnotationTypesAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cAnnotationTypesAnnotationTypeParserRuleCall_5_1_1_0 = (RuleCall)cAnnotationTypesAssignment_5_1_1.eContents().get(0);
		
		//Package:
		//	{Package} "Package" name=EString ";" ("types" "{" types+=Type ("," types+=Type)* "}")?
		//	(annotationTypes+=AnnotationType ("," annotationTypes+=AnnotationType)*)?;
		public ParserRule getRule() { return rule; }

		//{Package} "Package" name=EString ";" ("types" "{" types+=Type ("," types+=Type)* "}")? (annotationTypes+=AnnotationType
		//("," annotationTypes+=AnnotationType)*)?
		public Group getGroup() { return cGroup; }

		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }

		//"Package"
		public Keyword getPackageKeyword_1() { return cPackageKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }

		//("types" "{" types+=Type ("," types+=Type)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"types"
		public Keyword getTypesKeyword_4_0() { return cTypesKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//types+=Type
		public Assignment getTypesAssignment_4_2() { return cTypesAssignment_4_2; }

		//Type
		public RuleCall getTypesTypeParserRuleCall_4_2_0() { return cTypesTypeParserRuleCall_4_2_0; }

		//("," types+=Type)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//types+=Type
		public Assignment getTypesAssignment_4_3_1() { return cTypesAssignment_4_3_1; }

		//Type
		public RuleCall getTypesTypeParserRuleCall_4_3_1_0() { return cTypesTypeParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//(annotationTypes+=AnnotationType ("," annotationTypes+=AnnotationType)*)?
		public Group getGroup_5() { return cGroup_5; }

		//annotationTypes+=AnnotationType
		public Assignment getAnnotationTypesAssignment_5_0() { return cAnnotationTypesAssignment_5_0; }

		//AnnotationType
		public RuleCall getAnnotationTypesAnnotationTypeParserRuleCall_5_0_0() { return cAnnotationTypesAnnotationTypeParserRuleCall_5_0_0; }

		//("," annotationTypes+=AnnotationType)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//annotationTypes+=AnnotationType
		public Assignment getAnnotationTypesAssignment_5_1_1() { return cAnnotationTypesAssignment_5_1_1; }

		//AnnotationType
		public RuleCall getAnnotationTypesAnnotationTypeParserRuleCall_5_1_1_0() { return cAnnotationTypesAnnotationTypeParserRuleCall_5_1_1_0; }
	}

	public class AnnotationAttributeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttributeValue");
		private final RuleCall cSimpleValueParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnotationAttributeValue:
		//	SimpleValue;
		public ParserRule getRule() { return rule; }

		//SimpleValue
		public RuleCall getSimpleValueParserRuleCall() { return cSimpleValueParserRuleCall; }
	}

	public class AnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Annotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAnnotationTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAnnotationTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAnnotationTypeAnnotationTypeCrossReference_3_0 = (CrossReference)cAnnotationTypeAssignment_3.eContents().get(0);
		private final RuleCall cAnnotationTypeAnnotationTypeEStringParserRuleCall_3_0_1 = (RuleCall)cAnnotationTypeAnnotationTypeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cAttributesKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cAttributesAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_4_2_0 = (RuleCall)cAttributesAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cAttributesAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cAttributesAnnotationAttributeParserRuleCall_4_3_1_0 = (RuleCall)cAttributesAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Annotation:
		//	"Annotation" "{" "annotationType" annotationType=[AnnotationType|EString] ("attributes" "{"
		//	attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)* "}")? "}";
		public ParserRule getRule() { return rule; }

		//"Annotation" "{" "annotationType" annotationType=[AnnotationType|EString] ("attributes" "{"
		//attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)* "}")? "}"
		public Group getGroup() { return cGroup; }

		//"Annotation"
		public Keyword getAnnotationKeyword_0() { return cAnnotationKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"annotationType"
		public Keyword getAnnotationTypeKeyword_2() { return cAnnotationTypeKeyword_2; }

		//annotationType=[AnnotationType|EString]
		public Assignment getAnnotationTypeAssignment_3() { return cAnnotationTypeAssignment_3; }

		//[AnnotationType|EString]
		public CrossReference getAnnotationTypeAnnotationTypeCrossReference_3_0() { return cAnnotationTypeAnnotationTypeCrossReference_3_0; }

		//EString
		public RuleCall getAnnotationTypeAnnotationTypeEStringParserRuleCall_3_0_1() { return cAnnotationTypeAnnotationTypeEStringParserRuleCall_3_0_1; }

		//("attributes" "{" attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)* "}")?
		public Group getGroup_4() { return cGroup_4; }

		//"attributes"
		public Keyword getAttributesKeyword_4_0() { return cAttributesKeyword_4_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_4_2() { return cAttributesAssignment_4_2; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_4_2_0() { return cAttributesAnnotationAttributeParserRuleCall_4_2_0; }

		//("," attributes+=AnnotationAttribute)*
		public Group getGroup_4_3() { return cGroup_4_3; }

		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }

		//attributes+=AnnotationAttribute
		public Assignment getAttributesAssignment_4_3_1() { return cAttributesAssignment_4_3_1; }

		//AnnotationAttribute
		public RuleCall getAttributesAnnotationAttributeParserRuleCall_4_3_1_0() { return cAttributesAnnotationAttributeParserRuleCall_4_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//Type:
		//	{Type} "Type" name=EString ";";
		public ParserRule getRule() { return rule; }

		//{Type} "Type" name=EString ";"
		public Group getGroup() { return cGroup; }

		//{Type}
		public Action getTypeAction_0() { return cTypeAction_0; }

		//"Type"
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//";"
		public Keyword getSemicolonKeyword_3() { return cSemicolonKeyword_3; }
	}

	public class AnnotationTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnnotationTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnnotationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cContextKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cContextAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cContextEStringParserRuleCall_3_1_0 = (RuleCall)cContextAssignment_3_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Assignment cAttributesAssignment_5_0 = (Assignment)cGroup_5.eContents().get(0);
		private final RuleCall cAttributesAnnotationTypeAttributeParserRuleCall_5_0_0 = (RuleCall)cAttributesAssignment_5_0.eContents().get(0);
		private final Group cGroup_5_1 = (Group)cGroup_5.eContents().get(1);
		private final Keyword cCommaKeyword_5_1_0 = (Keyword)cGroup_5_1.eContents().get(0);
		private final Assignment cAttributesAssignment_5_1_1 = (Assignment)cGroup_5_1.eContents().get(1);
		private final RuleCall cAttributesAnnotationTypeAttributeParserRuleCall_5_1_1_0 = (RuleCall)cAttributesAssignment_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//AnnotationType:
		//	{AnnotationType} "@annotation" name=EString ("context" context=EString)? "{" (attributes+=AnnotationTypeAttribute
		//	("," attributes+=AnnotationTypeAttribute)*)? "}";
		public ParserRule getRule() { return rule; }

		//{AnnotationType} "@annotation" name=EString ("context" context=EString)? "{" (attributes+=AnnotationTypeAttribute (","
		//attributes+=AnnotationTypeAttribute)*)? "}"
		public Group getGroup() { return cGroup; }

		//{AnnotationType}
		public Action getAnnotationTypeAction_0() { return cAnnotationTypeAction_0; }

		//"@annotation"
		public Keyword getAnnotationKeyword_1() { return cAnnotationKeyword_1; }

		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }

		//("context" context=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"context"
		public Keyword getContextKeyword_3_0() { return cContextKeyword_3_0; }

		//context=EString
		public Assignment getContextAssignment_3_1() { return cContextAssignment_3_1; }

		//EString
		public RuleCall getContextEStringParserRuleCall_3_1_0() { return cContextEStringParserRuleCall_3_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//(attributes+=AnnotationTypeAttribute ("," attributes+=AnnotationTypeAttribute)*)?
		public Group getGroup_5() { return cGroup_5; }

		//attributes+=AnnotationTypeAttribute
		public Assignment getAttributesAssignment_5_0() { return cAttributesAssignment_5_0; }

		//AnnotationTypeAttribute
		public RuleCall getAttributesAnnotationTypeAttributeParserRuleCall_5_0_0() { return cAttributesAnnotationTypeAttributeParserRuleCall_5_0_0; }

		//("," attributes+=AnnotationTypeAttribute)*
		public Group getGroup_5_1() { return cGroup_5_1; }

		//","
		public Keyword getCommaKeyword_5_1_0() { return cCommaKeyword_5_1_0; }

		//attributes+=AnnotationTypeAttribute
		public Assignment getAttributesAssignment_5_1_1() { return cAttributesAssignment_5_1_1; }

		//AnnotationTypeAttribute
		public RuleCall getAttributesAnnotationTypeAttributeParserRuleCall_5_1_1_0() { return cAttributesAnnotationTypeAttributeParserRuleCall_5_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}

	public class AnnotationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAttributeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cAttributeAnnotationTypeAttributeCrossReference_3_0 = (CrossReference)cAttributeAssignment_3.eContents().get(0);
		private final RuleCall cAttributeAnnotationTypeAttributeEStringParserRuleCall_3_0_1 = (RuleCall)cAttributeAnnotationTypeAttributeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cValueAnnotationAttributeValueParserRuleCall_4_1_0 = (RuleCall)cValueAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AnnotationAttribute:
		//	"AnnotationAttribute" "{" "attribute" attribute=[AnnotationTypeAttribute|EString] ("value"
		//	value=AnnotationAttributeValue)? "}";
		public ParserRule getRule() { return rule; }

		//"AnnotationAttribute" "{" "attribute" attribute=[AnnotationTypeAttribute|EString] ("value"
		//value=AnnotationAttributeValue)? "}"
		public Group getGroup() { return cGroup; }

		//"AnnotationAttribute"
		public Keyword getAnnotationAttributeKeyword_0() { return cAnnotationAttributeKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//"attribute"
		public Keyword getAttributeKeyword_2() { return cAttributeKeyword_2; }

		//attribute=[AnnotationTypeAttribute|EString]
		public Assignment getAttributeAssignment_3() { return cAttributeAssignment_3; }

		//[AnnotationTypeAttribute|EString]
		public CrossReference getAttributeAnnotationTypeAttributeCrossReference_3_0() { return cAttributeAnnotationTypeAttributeCrossReference_3_0; }

		//EString
		public RuleCall getAttributeAnnotationTypeAttributeEStringParserRuleCall_3_0_1() { return cAttributeAnnotationTypeAttributeEStringParserRuleCall_3_0_1; }

		//("value" value=AnnotationAttributeValue)?
		public Group getGroup_4() { return cGroup_4; }

		//"value"
		public Keyword getValueKeyword_4_0() { return cValueKeyword_4_0; }

		//value=AnnotationAttributeValue
		public Assignment getValueAssignment_4_1() { return cValueAssignment_4_1; }

		//AnnotationAttributeValue
		public RuleCall getValueAnnotationAttributeValueParserRuleCall_4_1_0() { return cValueAnnotationAttributeValueParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	STRING | ID;
		public ParserRule getRule() { return rule; }

		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class AnnotationTypeAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationTypeAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAnnotationTypeAttributeAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeTypeCrossReference_3_0.eContents().get(1);
		
		//AnnotationTypeAttribute:
		//	{AnnotationTypeAttribute} name=ID ":" type=[Type];
		public ParserRule getRule() { return rule; }

		//{AnnotationTypeAttribute} name=ID ":" type=[Type]
		public Group getGroup() { return cGroup; }

		//{AnnotationTypeAttribute}
		public Action getAnnotationTypeAttributeAction_0() { return cAnnotationTypeAttributeAction_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//type=[Type]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[Type]
		public CrossReference getTypeTypeCrossReference_3_0() { return cTypeTypeCrossReference_3_0; }

		//ID
		public RuleCall getTypeTypeIDTerminalRuleCall_3_0_1() { return cTypeTypeIDTerminalRuleCall_3_0_1; }
	}

	public class SimpleValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleValue");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSimpleValueAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSimpleValueKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//SimpleValue:
		//	{SimpleValue} "SimpleValue" "{" ("value" value=EString)? "}";
		public ParserRule getRule() { return rule; }

		//{SimpleValue} "SimpleValue" "{" ("value" value=EString)? "}"
		public Group getGroup() { return cGroup; }

		//{SimpleValue}
		public Action getSimpleValueAction_0() { return cSimpleValueAction_0; }

		//"SimpleValue"
		public Keyword getSimpleValueKeyword_1() { return cSimpleValueKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//("value" value=EString)?
		public Group getGroup_3() { return cGroup_3; }

		//"value"
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }

		//value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }

		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private final PackageElements pPackage;
	private final AnnotationAttributeValueElements pAnnotationAttributeValue;
	private final AnnotationElements pAnnotation;
	private final TypeElements pType;
	private final AnnotationTypeElements pAnnotationType;
	private final AnnotationAttributeElements pAnnotationAttribute;
	private final EStringElements pEString;
	private final AnnotationTypeAttributeElements pAnnotationTypeAttribute;
	private final SimpleValueElements pSimpleValue;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AnnotateitGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPackage = new PackageElements();
		this.pAnnotationAttributeValue = new AnnotationAttributeValueElements();
		this.pAnnotation = new AnnotationElements();
		this.pType = new TypeElements();
		this.pAnnotationType = new AnnotationTypeElements();
		this.pAnnotationAttribute = new AnnotationAttributeElements();
		this.pEString = new EStringElements();
		this.pAnnotationTypeAttribute = new AnnotationTypeAttributeElements();
		this.pSimpleValue = new SimpleValueElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("co.edu.uniandes.csw.spl.dsl.Annotateit".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Package:
	//	{Package} "Package" name=EString ";" ("types" "{" types+=Type ("," types+=Type)* "}")?
	//	(annotationTypes+=AnnotationType ("," annotationTypes+=AnnotationType)*)?;
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}

	//AnnotationAttributeValue:
	//	SimpleValue;
	public AnnotationAttributeValueElements getAnnotationAttributeValueAccess() {
		return pAnnotationAttributeValue;
	}
	
	public ParserRule getAnnotationAttributeValueRule() {
		return getAnnotationAttributeValueAccess().getRule();
	}

	//Annotation:
	//	"Annotation" "{" "annotationType" annotationType=[AnnotationType|EString] ("attributes" "{"
	//	attributes+=AnnotationAttribute ("," attributes+=AnnotationAttribute)* "}")? "}";
	public AnnotationElements getAnnotationAccess() {
		return pAnnotation;
	}
	
	public ParserRule getAnnotationRule() {
		return getAnnotationAccess().getRule();
	}

	//Type:
	//	{Type} "Type" name=EString ";";
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}

	//AnnotationType:
	//	{AnnotationType} "@annotation" name=EString ("context" context=EString)? "{" (attributes+=AnnotationTypeAttribute
	//	("," attributes+=AnnotationTypeAttribute)*)? "}";
	public AnnotationTypeElements getAnnotationTypeAccess() {
		return pAnnotationType;
	}
	
	public ParserRule getAnnotationTypeRule() {
		return getAnnotationTypeAccess().getRule();
	}

	//AnnotationAttribute:
	//	"AnnotationAttribute" "{" "attribute" attribute=[AnnotationTypeAttribute|EString] ("value"
	//	value=AnnotationAttributeValue)? "}";
	public AnnotationAttributeElements getAnnotationAttributeAccess() {
		return pAnnotationAttribute;
	}
	
	public ParserRule getAnnotationAttributeRule() {
		return getAnnotationAttributeAccess().getRule();
	}

	//EString returns ecore::EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//AnnotationTypeAttribute:
	//	{AnnotationTypeAttribute} name=ID ":" type=[Type];
	public AnnotationTypeAttributeElements getAnnotationTypeAttributeAccess() {
		return pAnnotationTypeAttribute;
	}
	
	public ParserRule getAnnotationTypeAttributeRule() {
		return getAnnotationTypeAttributeAccess().getRule();
	}

	//SimpleValue:
	//	{SimpleValue} "SimpleValue" "{" ("value" value=EString)? "}";
	public SimpleValueElements getSimpleValueAccess() {
		return pSimpleValue;
	}
	
	public ParserRule getSimpleValueRule() {
		return getSimpleValueAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
