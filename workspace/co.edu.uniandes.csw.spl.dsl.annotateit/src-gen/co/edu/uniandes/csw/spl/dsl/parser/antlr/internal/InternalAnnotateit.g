/*
* generated by Xtext
*/
grammar InternalAnnotateit;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package co.edu.uniandes.csw.spl.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package co.edu.uniandes.csw.spl.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import co.edu.uniandes.csw.spl.dsl.services.AnnotateitGrammarAccess;

}

@parser::members {

 	private AnnotateitGrammarAccess grammarAccess;
 	
    public InternalAnnotateitParser(TokenStream input, AnnotateitGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Package";	
   	}
   	
   	@Override
   	protected AnnotateitGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRulePackage
entryRulePackage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPackageRule()); }
	 iv_rulePackage=rulePackage 
	 { $current=$iv_rulePackage.current; } 
	 EOF 
;

// Rule Package
rulePackage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPackageAccess().getPackageAction_0(),
            $current);
    }
)	otherlv_1='Package' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPackageAccess().getPackageKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='annotations' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPackageAccess().getAnnotationsKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getAnnotationsAnnotationParserRuleCall_4_2_0()); 
	    }
		lv_annotations_6_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_6_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPackageAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getAnnotationsAnnotationParserRuleCall_4_3_1_0()); 
	    }
		lv_annotations_8_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_8_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_10='types' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPackageAccess().getTypesKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getTypesTypeParserRuleCall_5_2_0()); 
	    }
		lv_types_12_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_12_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPackageAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getTypesTypeParserRuleCall_5_3_1_0()); 
	    }
		lv_types_14_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_14_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_5_4());
    }
)?(	otherlv_16='annotationTypes' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getPackageAccess().getAnnotationTypesKeyword_6_0());
    }
	otherlv_17='{' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_6_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getAnnotationTypesAnnotationTypeParserRuleCall_6_2_0()); 
	    }
		lv_annotationTypes_18_0=ruleAnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"annotationTypes",
        		lv_annotationTypes_18_0, 
        		"AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_19=',' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getPackageAccess().getCommaKeyword_6_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPackageAccess().getAnnotationTypesAnnotationTypeParserRuleCall_6_3_1_0()); 
	    }
		lv_annotationTypes_20_0=ruleAnnotationType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPackageRule());
	        }
       		add(
       			$current, 
       			"annotationTypes",
        		lv_annotationTypes_20_0, 
        		"AnnotationType");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_21='}' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_6_4());
    }
)?	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRuleAnnotationAttributeValue
entryRuleAnnotationAttributeValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationAttributeValueRule()); }
	 iv_ruleAnnotationAttributeValue=ruleAnnotationAttributeValue 
	 { $current=$iv_ruleAnnotationAttributeValue.current; } 
	 EOF 
;

// Rule AnnotationAttributeValue
ruleAnnotationAttributeValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getAnnotationAttributeValueAccess().getSimpleValueParserRuleCall()); 
    }
    this_SimpleValue_0=ruleSimpleValue
    { 
        $current = $this_SimpleValue_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleAnnotation
entryRuleAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationRule()); }
	 iv_ruleAnnotation=ruleAnnotation 
	 { $current=$iv_ruleAnnotation.current; } 
	 EOF 
;

// Rule Annotation
ruleAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Annotation' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAccess().getAnnotationKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='annotationType' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationAccess().getAnnotationTypeKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationTypeAnnotationTypeCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='attributes' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAccess().getAttributesKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAnnotationAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAttributesAnnotationAttributeParserRuleCall_4_2_0()); 
	    }
		lv_attributes_6_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_6_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAnnotationAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAccess().getAttributesAnnotationAttributeParserRuleCall_4_3_1_0()); 
	    }
		lv_attributes_8_0=ruleAnnotationAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"AnnotationAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAnnotationAccess().getRightCurlyBracketKeyword_4_4());
    }
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getAnnotationAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getTypeAccess().getTypeAction_0(),
            $current);
    }
)	otherlv_1='Type' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTypeAccess().getTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='annotations' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTypeAccess().getAnnotationsKeyword_4_0());
    }
	otherlv_5='{' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_4_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getAnnotationsAnnotationParserRuleCall_4_2_0()); 
	    }
		lv_annotations_6_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_6_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTypeAccess().getCommaKeyword_4_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getAnnotationsAnnotationParserRuleCall_4_3_1_0()); 
	    }
		lv_annotations_8_0=ruleAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"annotations",
        		lv_annotations_8_0, 
        		"Annotation");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_4_4());
    }
)?(	otherlv_10='attributes' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTypeAccess().getAttributesKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getTypeAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_2_0()); 
	    }
		lv_attributes_12_0=ruleAnnotationTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_12_0, 
        		"AnnotationTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getTypeAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_3_1_0()); 
	    }
		lv_attributes_14_0=ruleAnnotationTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_14_0, 
        		"AnnotationTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_5_4());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleAnnotationType
entryRuleAnnotationType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTypeRule()); }
	 iv_ruleAnnotationType=ruleAnnotationType 
	 { $current=$iv_ruleAnnotationType.current; } 
	 EOF 
;

// Rule AnnotationType
ruleAnnotationType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnnotationTypeAccess().getAnnotationTypeAction_0(),
            $current);
    }
)	otherlv_1='AnnotationType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationTypeAccess().getAnnotationTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationTypeAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='context' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationTypeAccess().getContextKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getContextEStringParserRuleCall_4_1_0()); 
	    }
		lv_context_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		set(
       			$current, 
       			"context",
        		lv_context_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_6='attributes' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationTypeAccess().getAttributesKeyword_5_0());
    }
	otherlv_7='{' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAnnotationTypeAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_2_0()); 
	    }
		lv_attributes_8_0=ruleAnnotationTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_8_0, 
        		"AnnotationTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getAnnotationTypeAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAccess().getAttributesAnnotationTypeAttributeParserRuleCall_5_3_1_0()); 
	    }
		lv_attributes_10_0=ruleAnnotationTypeAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeRule());
	        }
       		add(
       			$current, 
       			"attributes",
        		lv_attributes_10_0, 
        		"AnnotationTypeAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getAnnotationTypeAccess().getRightCurlyBracketKeyword_5_4());
    }
)?	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getAnnotationTypeAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleAnnotationAttribute
entryRuleAnnotationAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationAttributeRule()); }
	 iv_ruleAnnotationAttribute=ruleAnnotationAttribute 
	 { $current=$iv_ruleAnnotationAttribute.current; } 
	 EOF 
;

// Rule AnnotationAttribute
ruleAnnotationAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='AnnotationAttribute' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAnnotationAttributeAccess().getAnnotationAttributeKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationAttributeAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='attribute' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAnnotationAttributeAccess().getAttributeKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getAttributeAnnotationTypeAttributeCrossReference_3_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='value' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationAttributeAccess().getValueKeyword_4_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationAttributeAccess().getValueAnnotationAttributeValueParserRuleCall_4_1_0()); 
	    }
		lv_value_5_0=ruleAnnotationAttributeValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationAttributeRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"AnnotationAttributeValue");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationAttributeAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleAnnotationTypeAttribute
entryRuleAnnotationTypeAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationTypeAttributeRule()); }
	 iv_ruleAnnotationTypeAttribute=ruleAnnotationTypeAttribute 
	 { $current=$iv_ruleAnnotationTypeAttribute.current; } 
	 EOF 
;

// Rule AnnotationTypeAttribute
ruleAnnotationTypeAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getAnnotationTypeAttributeAccess().getAnnotationTypeAttributeAction_0(),
            $current);
    }
)	otherlv_1='AnnotationTypeAttribute' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAnnotationTypeAttributeAccess().getAnnotationTypeAttributeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAttributeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationTypeAttributeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAnnotationTypeAttributeAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='type' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAnnotationTypeAttributeAccess().getTypeKeyword_4_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationTypeAttributeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getAnnotationTypeAttributeAccess().getTypeTypeCrossReference_4_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAnnotationTypeAttributeAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleSimpleValue
entryRuleSimpleValue returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleValueRule()); }
	 iv_ruleSimpleValue=ruleSimpleValue 
	 { $current=$iv_ruleSimpleValue.current; } 
	 EOF 
;

// Rule SimpleValue
ruleSimpleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSimpleValueAccess().getSimpleValueAction_0(),
            $current);
    }
)	otherlv_1='SimpleValue' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleValueAccess().getSimpleValueKeyword_1());
    }
	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSimpleValueAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='value' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleValueAccess().getValueKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleValueAccess().getValueEStringParserRuleCall_3_1_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleValueAccess().getRightCurlyBracketKeyword_4());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


